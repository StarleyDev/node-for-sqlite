// UpdateApp
/**
 * @author Starley Cazorla
 */
'use sctict'

const { downloadFile, exctratFile } = require('../../services/download/download.service');
const { deleteFolder } = require('../../util/folders.util');

const APP_CONFIG_DEFAULT = require('./../../config/app-config.js');

exports.get = (req, res, next) => {
    /** Caso for uma vers√£o beta */
    let updateBeta = req.query['updateBeta'] === undefined ? false : req.query['updateBeta'];

    console.log('\n# * üöÄ üöÄ üöÄ INICIO DE ATUALIZA√á√ÉO üöÄ üöÄ üöÄ * #');
    downloadFile(updateBeta ? APP_CONFIG_DEFAULT.urlDownloadAngularProjectBeta : APP_CONFIG_DEFAULT.urlDownloadAngularProject, APP_CONFIG_DEFAULT.txtDownloadAngularProject).then(async (data) => {
        if (data) {
            await deleteFolder('www');
            await exctratFile(APP_CONFIG_DEFAULT.txtDownloadAngularProject).finally(() => {
                console.log('# * üéâ ARQUIVO EXTRAIDO! * #');
                console.log('# * üéä üéä üéä FIM DE ATUALIZA√á√ÉO üéä üéä üéä * #');
                console.log('\n# * ‚úÖ APLICA√á√ÉO PRONTA PARA USO! ‚úÖ * #\n');
                res.send({ statusAtualizacao: 'Atualizado!' });
            }).catch(() => {
                res.status(400).send('N√£o foi poss√≠vel extrair o arquivo!')
            });
        } else {
            res.status(400).send('N√£o foi poss√≠vel fazer o download do arquivo!')
        }
    }).catch((err) => {
        console.log("\n# * ‚ùå N√ÉO FOI POSS√çVEL PROCESSAR O DOWNLOAD * #", err);
        res.status(400).send('Ops! Houve um erro ao processar do download!')
    });
};
